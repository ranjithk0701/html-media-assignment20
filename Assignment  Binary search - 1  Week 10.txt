1-> 
#include <iostream>
using namespace std;

int main()
{
    int arr[] = {1,2,3,3,4,4,4,5};
    int x = 4;
    int n = sizeof(arr)/sizeof(arr[0]);
    int lo = 0;
    int hi = n-1;
    while(lo <= hi){
        int mid = lo + (hi - lo)/2;
        if(arr[mid] == x){
            if(arr[mid+1] == x){
                lo = mid + 1;
            }
            else{
                cout<<mid;
                break;
            }
        }
        else if(x > arr[mid]) lo = mid + 1;
        else hi = mid - 1;
    }

    return 0;
}


2-> 

#include <iostream>
using namespace std;

int main()
{
    int arr[] = {0,0,0,0,1,1};
    int x = 1;
    int n = sizeof(arr)/sizeof(arr[0]);
    int lo = 0;
    int hi = n-1;
    while(lo <= hi){
        int mid = lo + (hi - lo)/2;
        if(arr[mid] == x){
            if(arr[mid-1] == x){
                hi = mid - 1;
            }
            else{
                int count = 0;
                while(mid < n){
                    count++;
                    mid++;
                }
                cout<<count;
                break;
            }
        }
        else if(x > arr[mid]) lo = mid + 1;
        else hi = mid - 1;
    }

    return 0;
}


3->
	
#include <iostream>
using namespace std;

int main()
{
    int n = 5;
    int m = 4;
    int arr[5][4] = {
        {0, 0, 0, 1},
        {0, 1, 1, 1},
        {1, 1, 1, 1},
        {0, 0, 0, 0},
        {0, 1, 1, 1}
    };
    
    int x = 1;
    int maxi = 0;
    int maxRowIndex = -1;

    for(int i = 0; i < n; i++){
        int lo = 0;
        int hi = m - 1;
        while(lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if(arr[i][mid] == x){
                if(mid == 0 || arr[i][mid - 1] < x) {
                    int count = m - mid;
                    if(count > maxi) {
                        maxi = count;
                        maxRowIndex = i;
                    }
                    break;
                } else {
                    hi = mid - 1;
                }
            } else if(x > arr[i][mid]) {
                lo = mid + 1;
            } else {
                hi = mid - 1;
            }
        }
    }

    cout << "Row with maximum 1s: " << maxRowIndex << endl;
    cout << "Maximum number of 1s: " << maxi << endl;

    return 0;
}


4->

#include <iostream>
using namespace std;

int main()
{
    int arr[] = {1,2,2,3,4,5};
    
    int n = sizeof(arr)/sizeof(arr[0]);
    int lo = 0;
    int hi = n-1;
    while(lo <= hi){
            int mid = lo + (hi - lo)/2;
            if(arr[mid] == mid){
                if(arr[mid-1] == mid || arr[mid+1] == mid){
                    cout<<mid;
                    break;
                } 
                
            }
            else if(arr[mid] > mid) lo = mid + 1;
            else hi = mid - 1;
        }
        

    return 0;
}

5->

#include <iostream>
using namespace std;

int main()
{
    int n = 39;
    int lo = 0;
    int hi = n;
    while(lo <= hi){
            int mid = lo + (hi - lo)/2;
            if(mid*mid == n){
                cout<<"yes";
                break;
            }
            else if(mid*mid != n){
                cout<<"no";
                break;
            } 
            else if(mid*mid < n) lo = mid + 1;
            else hi = mid - 1;
    }
    return 0;
}

